"use strict";(self.webpackChunkie_docs=self.webpackChunkie_docs||[]).push([[981],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),g=a,f=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7367:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={},i="Have existing learners?",l={unversionedId:"single-sign-on/existing-learners",id:"single-sign-on/existing-learners",title:"Have existing learners?",description:"Any time you'd like to change your configuration for a client with existing learners, and you'd like learner progress to maintain intact, you'll need to ensure that the externalCustomerId (the internal learner reference ID) remains the same for each learner. For SAML, that means the NameID, and for CAS, that means the casuser.",source:"@site/docs/single-sign-on/existing-learners.md",sourceDirName:"single-sign-on",slug:"/single-sign-on/existing-learners",permalink:"/single-sign-on/existing-learners",draft:!1,editUrl:"https://github.com/innovative-educators/ie-docs/blob/master/docs/single-sign-on/existing-learners.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuring CAS",permalink:"/single-sign-on/configuring-cas/cas"},next:{title:"Data Integrations",permalink:"/data-integrations/introduction"}},s={},c=[{value:"Options for moving an existing client (with learners) to SSO",id:"options-for-moving-an-existing-client-with-learners-to-sso",level:2},{value:"Fresh start for all learners",id:"fresh-start-for-all-learners",level:3},{value:"Fresh start for non-college email addresses",id:"fresh-start-for-non-college-email-addresses",level:3}],u={toc:c};function d(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"have-existing-learners"},"Have existing learners?"),(0,a.kt)("p",null,"Any time you'd like to change your configuration for a client with existing learners, and you'd like learner progress to maintain intact, you'll need to ensure that the ",(0,a.kt)("inlineCode",{parentName:"p"},"externalCustomerId")," (the internal learner reference ID) remains the same for each learner. For SAML, that means the ",(0,a.kt)("inlineCode",{parentName:"p"},"Name_ID"),", and for CAS, that means the ",(0,a.kt)("inlineCode",{parentName:"p"},"cas_user"),"."),(0,a.kt)("h2",{id:"options-for-moving-an-existing-client-with-learners-to-sso"},"Options for moving an existing client (with learners) to SSO"),(0,a.kt)("h3",{id:"fresh-start-for-all-learners"},"Fresh start for all learners"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We could work with your school to essentially free up the existing email addresses."),(0,a.kt)("li",{parentName:"ul"},"The school would configure SSO for all learners using the college email address."),(0,a.kt)("li",{parentName:"ul"},"All learners would have a fresh start."),(0,a.kt)("li",{parentName:"ul"},"All previous progress would be attached to the unused accounts.")),(0,a.kt)("h3",{id:"fresh-start-for-non-college-email-addresses"},"Fresh start for non-college email addresses"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You can choose to configure SSO using official school college addresses."),(0,a.kt)("li",{parentName:"ul"},"Any learner who registered with the correct college email would have their progress saved. (We recommend emailing current learners to update their account with their college email address prior to a specific date.)"),(0,a.kt)("li",{parentName:"ul"},"Any learner with a non-college email or (any typo or variation of the email) would have a new account created."),(0,a.kt)("li",{parentName:"ul"},"Any learner with a new account created would lose previous progress and data would essentially start over.")))}d.isMDXComponent=!0}}]);